---
import Code from '../components/Code.astro';
---

<section class="relative w-full overflow-hidden py-12 lg:py-24 min-h-screen" id="hero">
  
  <!-- Fondo decorativo -->
  <div class="absolute inset-0 -z-10">
    <div class="absolute inset-0 bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-slate-950 dark:via-slate-900 dark:to-blue-950/20"></div>
    <div class="absolute inset-0 opacity-30 dark:opacity-20" style="background-image: radial-gradient(circle at 1px 1px, rgba(59, 130, 246, 0.15) 1px, transparent 0); background-size: 40px 40px;"></div>
    <div class="absolute top-20 left-20 w-64 h-64 bg-gradient-to-r from-blue-100 to-purple-200 dark:from-blue-900/20 dark:to-purple-800/20 rounded-full blur-3xl opacity-50"></div>
    <div class="absolute bottom-20 right-20 w-80 h-80 bg-gradient-to-l from-purple-100 to-cyan-100 dark:from-purple-900/20 dark:to-cyan-900/20 rounded-full blur-3xl opacity-40"></div>
    <div class="absolute top-1/2 left-1/3 w-48 h-48 bg-gradient-to-br from-blue-50 to-purple-100 dark:from-blue-950/30 dark:to-purple-900/30 rounded-full blur-2xl opacity-60"></div>
    <svg class="absolute inset-0 w-full h-full opacity-10 dark:opacity-5" viewBox="0 0 1000 1000" preserveAspectRatio="none">
      <path d="M0,200 Q250,100 500,200 T1000,200" stroke="rgb(59, 130, 246)" stroke-width="2" fill="none"/>
      <path d="M0,400 Q250,300 500,400 T1000,400" stroke="rgb(139, 92, 246)" stroke-width="1.5" fill="none"/>
      <path d="M0,600 Q250,500 500,600 T1000,600" stroke="rgb(6, 182, 212)" stroke-width="1" fill="none"/>
    </svg>
    <div class="absolute top-32 right-32 w-6 h-6 border-2 border-blue-300 dark:border-blue-700 rotate-45 opacity-60 animate-pulse"></div>
    <div class="absolute bottom-32 left-32 w-4 h-4 bg-purple-300 dark:bg-purple-700 rounded-full opacity-50 animate-bounce" style="animation-delay: 1s;"></div>
    <div class="absolute top-1/3 right-1/4 w-3 h-8 bg-cyan-200 dark:bg-cyan-800 opacity-40 rotate-12"></div>
    <div class="absolute bottom-1/3 left-1/4 w-8 h-3 bg-blue-200 dark:bg-blue-800 opacity-40 -rotate-12"></div>
    
    <!-- Elementos decorativos adicionales -->
    <div class="absolute top-1/4 left-1/2 w-2 h-2 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full opacity-60 animate-pulse" style="animation-delay: 2s;"></div>
    <div class="absolute bottom-1/4 right-1/3 w-5 h-5 border border-cyan-400 dark:border-cyan-600 rounded opacity-40 animate-spin" style="animation-duration: 8s;"></div>
  </div>

  <!-- Contenido centrado -->
  <div class="relative flex flex-col lg:flex-row gap-8 lg:gap-12 max-w-7xl mx-auto px-6 sm:px-8 lg:px-12 items-center justify-center">
    <!-- Sección de la izquierda -->
    <div class="relative flex items-center justify-center w-full lg:w-1/2 z-10">
      <div class="flex flex-col items-center text-center max-w-md mt-16 lg:mt-0">
        <div class="relative mb-6">
          <div class="absolute -top-2 -right-2 w-6 h-6 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-pulse opacity-80 z-10"></div>
          <div class="absolute -bottom-1 -left-1 w-4 h-4 bg-gradient-to-r from-purple-400 to-cyan-400 rounded-full animate-bounce opacity-60" style="animation-delay: 0.5s;"></div>
          <div class="gradient-border-img rounded-full p-1">
            <img 
              src="https://avatars.githubusercontent.com/u/139426429?v=4" 
              alt="Foto de perfil De Daniel Cerritos desarrollador Frontend Jr" 
              class="rounded-full shadow-xl w-48 sm:w-56 mx-auto introup backdrop-blur-sm profile-glow"
            >
          </div>
        </div>

        <h1 
          class="text-6xl sm:text-5xl lg:text-6xl xl:text-7xl font-[Anton] mb-6 leading-tight cursor-default transition-all duration-300 text-gradient drop-shadow-sm"
          data-anim="Daniel Cerritos"
        >
          Daniel Cerritos
        </h1>

        <div class="mb-6 text-base sm:text-lg gradient-border-btn rounded-full p-0.5 max-w-fit introup">
          <div class="flex items-center justify-center px-6 py-3 bg-white/90 dark:bg-slate-900/90 rounded-full font-[Roboto] font-semibold backdrop-blur-sm tag-glow">
            <svg xmlns="http://www.w3.org/2000/svg" class="size-5 sm:size-6 mr-2 flex-shrink-0 text-blue-500 dark:text-blue-400" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="m3.75 13.5 10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75Z" />
            </svg>
            <span class="text-gradient" data-anim="Desarrollador Web">Desarrollador Web</span>
          </div>
        </div>

        <p class="text-gray-600 dark:text-gray-300 text-sm sm:text-base text-center px-4 drop-shadow-sm opacity-80" data-anim="*Esta página fue creada con Astro, TailwindCSS*">
          *Esta página fue creada con Astro, TailwindCSS*
        </p>
      </div>
    </div>

    <!-- Sección de la derecha -->
    <div class="relative flex flex-col items-center justify-center w-full lg:w-1/2 min-h-[300px] lg:min-h-[400px] introup z-10">
  <Code />
  <div class="flex flex-row justify-center items-center gap-3 mt-6 flex-wrap">
    <!-- Botón Curriculum -->
    <div class="text-base sm:text-lg gradient-border-btn rounded-full p-0.5 max-w-fit introup">
      <div class="flex items-center justify-center px-6 py-3 bg-white/90 dark:bg-slate-900/90 rounded-full font-[Roboto] font-semibold backdrop-blur-sm tag-glow ">
        <span class="text-gradient">Curriculum Vitae</span>
      </div>
    </div>

    <!-- Botón GitHub -->
      <a 
        href="https://github.com/cerrpuffs" 
        target="_blank" 
        rel="noopener noreferrer"
        class="gradient-border-btn rounded-full p-0.5 tag-glow inline-block max-w-fit introup"
      >
        <div class="flex items-center justify-center px-6 py-3 bg-white/90 dark:bg-slate-900/90 rounded-full font-[Roboto] font-semibold backdrop-blur-sm gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 sm:w-6 sm:h-6 text-gray-800 dark:text-gray-100" fill="currentColor" viewBox="0 0 24 24">
            <path fill-rule="evenodd" d="M12 0C5.37 0 0 5.37 0 12c0 5.3 3.438 9.8 8.205 11.385.6.113.82-.26.82-.577 0-.285-.01-1.04-.015-2.04-3.338.726-4.042-1.61-4.042-1.61-.546-1.385-1.333-1.753-1.333-1.753-1.09-.745.083-.73.083-.73 1.205.084 1.84 1.237 1.84 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.605-2.665-.304-5.467-1.332-5.467-5.93 0-1.31.468-2.382 1.235-3.222-.124-.303-.535-1.524.118-3.176 0 0 1.008-.322 3.3 1.23a11.5 11.5 0 0 1 3-.405c1.02.005 2.045.138 3 .405 2.29-1.552 3.295-1.23 3.295-1.23.655 1.652.244 2.873.12 3.176.77.84 1.23 1.912 1.23 3.222 0 4.61-2.807 5.624-5.48 5.92.43.37.823 1.096.823 2.21 0 1.595-.015 2.88-.015 3.27 0 .32.22.694.825.576C20.565 21.796 24 17.3 24 12c0-6.63-5.37-12-12-12Z" clip-rule="evenodd"/>
          </svg>
          <span>GitHub</span>
        </div>
      </a>
  </div>
</div>
  </div>
</section>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Anton&family=Cascadia+Mono:ital,wght@0,200..700;1,200..700&family=Exile&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Roboto:ital,wght@0,100..900;1,100..900&family=Winky+Rough:ital,wght@0,300..900;1,300..900&display=swap');


  .gradient-border-img {
    background: linear-gradient(45deg, #3b82f6, #8b5cf6, #06b6d4);
    border-radius: 50%;
    padding: 4px;
    display: inline-block;
  }

  .gradient-border-btn {
    background: linear-gradient(45deg, #3b82f6, #8b5cf6, #06b6d4);
    display: inline-block;
    transition: all 0.3s ease;
  }

  .gradient-border-btn:hover {
    background: linear-gradient(45deg, #2563eb, #7c3aed, #0891b2);
    transform: translateY(2px);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
  }

  .text-gradient {
    background: linear-gradient(135deg, #3b82f6, #8b5cf6, #06b6d4);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    background-size: 200% 200%;
    animation: gradient-shift 3s ease-in-out infinite;
  }

  .border-gradient {
    border: 2px solid;
    border-image: linear-gradient(45deg, #3b82f6, #8b5cf6, #06b6d4) 1;
  }

  .profile-glow {
    box-shadow: 0 0 30px rgba(59, 130, 246, 0.3), 0 0 60px rgba(139, 92, 246, 0.2);
  }

  .dark .profile-glow {
    box-shadow: 0 0 40px rgba(59, 130, 246, 0.4), 0 0 80px rgba(139, 92, 246, 0.3);
  }

  .tag-glow {
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.15);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .tag-glow:hover {
    transform: translateY(-2px) scale(1.03);
    box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3), 0 0 10px rgba(139, 92, 246, 0.25);
    cursor: pointer;
  }
  .tag-glow:active {
    transform: scale(0.98);
    box-shadow: 0 4px 10px rgba(59, 130, 246, 0.2);
  }

  @keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  @keyframes fadeSlideUp {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .introup {
    animation: fadeSlideUp 0.8s ease-out forwards;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-10px) rotate(5deg); }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  /* Mejoras adicionales */
  .cardmini {
    max-width: 190px;
    padding: 0.875rem;
    font-size: 1rem;
    border: 1.5px solid transparent;
    background: linear-gradient(white, white) padding-box,
                linear-gradient(45deg, #3b82f6, #8b5cf6) border-box;
    border-radius: 0.5rem;
    box-shadow: 2.5px 3px 0 rgba(59, 130, 246, 0.3);
    outline: none;
    transition: ease 0.25s;
  }

  .dark .cardmini {
    background: linear-gradient(#0f172a, #0f172a) padding-box,
                linear-gradient(45deg, #3b82f6, #8b5cf6) border-box;
  }

  .dark {
    color-scheme: dark;
  }
</style>

<script>
  const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

  if (typeof window !== "undefined") {
    window.addEventListener("DOMContentLoaded", () => {
      const animElements = document.querySelectorAll("[data-anim]");

      animElements.forEach(el => {
        const originalText = el.dataset.anim;
        let iteration = 0;
        let interval = setInterval(() => {
          el.innerText = originalText
            .split("")
            .map((letter, index) => {
              if (index < iteration) return originalText[index];
              return letters[Math.floor(Math.random() * 26)];
            })
            .join("");

          if (iteration >= originalText.length) {
            clearInterval(interval);
          }

          iteration += 1 / 3;
        }, 15);
      });
    });
  }
</script>