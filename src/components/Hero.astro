---
import Code from '../components/Code.astro';
---

<section class="relative w-full overflow-hidden py-12 lg:py-24 min-h-screen" id="hero">
  <!-- Fondo decorativo -->
  <div class="absolute inset-0 -z-10">
    <div class="absolute inset-0 bg-gradient-to-br from-red-50 via-white to-red-50 dark:from-neutral-950 dark:via-neutral-900 dark:to-red-950/20"></div>
    <div class="absolute inset-0 opacity-30 dark:opacity-20" style="background-image: radial-gradient(circle at 1px 1px, rgba(239, 68, 68, 0.15) 1px, transparent 0); background-size: 40px 40px;"></div>
    <div class="absolute top-20 left-20 w-64 h-64 bg-gradient-to-r from-red-100 to-red-200 dark:from-red-900/20 dark:to-red-800/20 rounded-full blur-3xl opacity-50"></div>
    <div class="absolute bottom-20 right-20 w-80 h-80 bg-gradient-to-l from-red-100 to-orange-100 dark:from-red-900/20 dark:to-orange-900/20 rounded-full blur-3xl opacity-40"></div>
    <div class="absolute top-1/2 left-1/3 w-48 h-48 bg-gradient-to-br from-red-50 to-red-100 dark:from-red-950/30 dark:to-red-900/30 rounded-full blur-2xl opacity-60"></div>
    <svg class="absolute inset-0 w-full h-full opacity-10 dark:opacity-5" viewBox="0 0 1000 1000" preserveAspectRatio="none">
      <path d="M0,200 Q250,100 500,200 T1000,200" stroke="rgb(239, 68, 68)" stroke-width="2" fill="none"/>
      <path d="M0,400 Q250,300 500,400 T1000,400" stroke="rgb(239, 68, 68)" stroke-width="1.5" fill="none"/>
      <path d="M0,600 Q250,500 500,600 T1000,600" stroke="rgb(239, 68, 68)" stroke-width="1" fill="none"/>
    </svg>
    <div class="absolute top-32 right-32 w-6 h-6 border-2 border-red-300 dark:border-red-700 rotate-45 opacity-60 animate-pulse"></div>
    <div class="absolute bottom-32 left-32 w-4 h-4 bg-red-300 dark:bg-red-700 rounded-full opacity-50 animate-bounce" style="animation-delay: 1s;"></div>
    <div class="absolute top-1/3 right-1/4 w-3 h-8 bg-red-200 dark:bg-red-800 opacity-40 rotate-12"></div>
    <div class="absolute bottom-1/3 left-1/4 w-8 h-3 bg-red-200 dark:bg-red-800 opacity-40 -rotate-12"></div>
  </div>

  <!-- Contenido centrado -->
  <div class="relative flex flex-col lg:flex-row gap-8 lg:gap-12 max-w-7xl mx-auto px-6 sm:px-8 lg:px-12 items-center justify-center">
    <!-- Sección de la izquierda -->
    <div class="relative flex items-center justify-center w-full lg:w-1/2 z-10">
      <div class="flex flex-col items-center text-center max-w-md mt-16 lg:mt-0">
        <div class="relative mb-6">
          <img 
            src="https://static.vecteezy.com/system/resources/previews/038/357/518/non_2x/red-anger-symbol-icon-free-png.png" 
            class="w-8 sm:w-10 absolute top-0 right-4 sm:right-7 z-10 introup" 
            alt="Icono de enojo"
          >
          <img 
            src="https://avatars.githubusercontent.com/u/139426429?v=4" 
            alt="Foto de perfil" 
            class="rounded-full border-4 border-red-500 shadow-lg w-48 sm:w-56 mx-auto introup dark:shadow-red-500/50 backdrop-blur-sm bg-white/10 dark:bg-black/10"
          >
        </div>

        <h1 
          class="text-6xl sm:text-5xl lg:text-6xl xl:text-7xl font-[Anton] mb-6 leading-tight cursor-default transition-all duration-300 text-black dark:text-white dark:shadow-white drop-shadow-sm"
          data-anim="Daniel Cerritos"
        >
          Daniel Cerritos
        </h1>

        <div class="mb-6 text-base sm:text-lg flex items-center justify-center border-2 border-red-500 rounded-full px-4 py-3 shadow-lg text-red-500 font-[Roboto] font-semibold max-w-fit bg-white/90 dark:bg-neutral-900/90 dark:text-red-400 dark:border-red-400 dark:shadow-red-500/50 introup backdrop-blur-sm">
          <svg xmlns="http://www.w3.org/2000/svg" class="size-5 sm:size-6 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="m3.75 13.5 10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75Z" />
          </svg>
          <span data-anim="Desarrollador de Software en formación">Desarrollador de Software en formación</span>
        </div>

        <p class="text-gray-600 dark:text-gray-300 text-sm sm:text-base text-center px-4 drop-shadow-sm" data-anim="*Esta página fue creada con Astro, TailwindCSS y mucho café*">
          *Esta página fue creada con Astro, TailwindCSS y mucho café*
        </p>
      </div>
    </div>

    <!-- Sección de la derecha -->
    <div class="relative flex flex-col items-center justify-center w-full lg:w-1/2 min-h-[300px] lg:min-h-[400px] introup dark:shadow-red-500 z-10">
      <Code />
    </div>
  </div>
</section>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Anton&family=Cascadia+Mono:ital,wght@0,200..700;1,200..700&family=Exile&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Roboto:ital,wght@0,100..900;1,100..900&family=Winky+Rough:ital,wght@0,300..900;1,300..900&display=swap');

  .cardmini {
    max-width: 190px;
    padding: 0.875rem;
    font-size: 1rem;
    border: 1.5px solid #ef4444;
    border-radius: 0.5rem;
    box-shadow: 2.5px 3px 0 #ef4444;
    outline: none;
    transition: ease 0.25s;
  }

  @keyframes fadeSlideUp {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .introup {
    animation: fadeSlideUp 0.8s ease-out forwards;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-10px) rotate(5deg); }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .dark {
    color-scheme: dark;
  }
</style>

<script>
  const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

  if (typeof window !== "undefined") {
    window.addEventListener("DOMContentLoaded", () => {
      const animElements = document.querySelectorAll("[data-anim]");

      animElements.forEach(el => {
        const originalText = el.dataset.anim;
        let iteration = 0;
        let interval = setInterval(() => {
          el.innerText = originalText
            .split("")
            .map((letter, index) => {
              if (index < iteration) return originalText[index];
              return letters[Math.floor(Math.random() * 26)];
            })
            .join("");

          if (iteration >= originalText.length) {
            clearInterval(interval);
          }

          iteration += 1 / 3;
        }, 5);
      });
    });
  }
</script>
