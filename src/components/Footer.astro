---
export interface Props {
  name?: string;
  description?: string;
  githubUrl?: string;
  email?: string;
  twitterUrl?: string;
  linkedinUrl?: string;
}

const {
  name = "Daniel Cerritos",
  description = "Desarrollador frontend apasionado por crear experiencias digitales excepcionales. Especializado en Astro, TailwindCSS y tecnolog√≠as modernas.",
  githubUrl = "https://github.com",
  email = "correo@example.com",
  twitterUrl = "https://twitter.com",
  linkedinUrl = "https://linkedin.com"
} = Astro.props;

const currentYear = new Date().getFullYear();

const services = [
  { name: "Desarrollo Web", icon: "code", color: "bg-blue-500" },
  { name: "Apps Electron", icon: "desktop", color: "bg-purple-500" },
  { name: "UI/UX Design", icon: "design", color: "bg-green-500" },
  { name: "SEO", icon: "search", color: "bg-orange-500" }
];

const quickLinks = [
  { name: "Inicio", href: "#hero" },
  { name: "Sobre m√≠", href: "#about" },
  { name: "Proyectos", href: "#projects" },
  { name: "Habilidades", href: "#skills" },
  { name: "Experiencia", href: "#experiencia" },
  { name: "Contacto", href: "#contact" }
];
---

<section id="footer" class="relative bg-white dark:bg-slate-900 overflow-hidden border-t border-gradient-subtle">
  <!-- Borde superior degradado animado -->
  <div class="absolute top-0 left-0 w-full h-[4px] z-20 bg-gradient-to-r from-blue-500 via-purple-500 to-cyan-500 animate-gradientMove opacity-80 rounded-t-full"></div>

  <!-- Patr√≥n decorativo -->
  <div class="absolute inset-0 pattern-dots opacity-30"></div>

  <div class="relative max-w-7xl mx-auto px-6 py-16">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-12 mb-12">
      <!-- Columna 1 -->
      <div class="space-y-6">
        <div class="floating-animation">
          <h2 class="text-3xl font-bold text-gradient mb-4">{name}</h2>
          <div class="gradient-border">
            <div class="gradient-border-inner">
              <p class="text-gray-600 dark:text-gray-300 leading-relaxed" set:html={description.replace('Astro', '<span class="font-semibold text-blue-600 dark:text-blue-400">Astro</span>').replace('TailwindCSS', '<span class="font-semibold text-blue-600 dark:text-blue-400">TailwindCSS</span>')}>
              </p>
            </div>
          </div>
        </div>
        <div>
          <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-4">Conecta conmigo</h3>
          <div class="flex gap-4">
            <!-- GitHub -->
            <a href={githubUrl} target="_blank" aria-label="GitHub" class="social-icon w-12 h-12 bg-gray-800 dark:bg-gray-700 text-white rounded-xl flex items-center justify-center glow-effect hover:bg-gray-700 dark:hover:bg-gray-600">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0C5.373 0 0 5.373 0 12c0..."/>
              </svg>
            </a>
            <!-- Email -->
            <a href={`mailto:${email}`} aria-label="Correo" class="social-icon w-12 h-12 bg-red-500 text-white rounded-xl flex items-center justify-center glow-effect hover:bg-red-600">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89..."/>
              </svg>
            </a>
            <!-- Twitter -->
            <a href={twitterUrl} target="_blank" aria-label="Twitter" class="social-icon w-12 h-12 bg-sky-500 text-white rounded-xl flex items-center justify-center glow-effect hover:bg-sky-600">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.953 4.57a10 10..."/>
              </svg>
            </a>
            <!-- LinkedIn -->
            <a href={linkedinUrl} target="_blank" aria-label="LinkedIn" class="social-icon w-12 h-12 bg-blue-600 text-white rounded-xl flex items-center justify-center glow-effect hover:bg-blue-700">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c..."/>
              </svg>
            </a>
          </div>
        </div>
      </div>

      <!-- Columna 2 -->
      <div class="space-y-6">
        <h3 class="text-xl font-semibold text-gray-800 dark:text-white">Enlaces r√°pidos</h3>
        <nav class="space-y-3">
          {quickLinks.map((link) => (
            <a href={link.href} class="group flex items-center text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
              <span class="w-2 h-2 bg-blue-500 rounded-full mr-3 opacity-0 group-hover:opacity-100 transition-opacity"></span>
              {link.name}
            </a>
          ))}
        </nav>
      </div>

      <!-- Columna 3 -->
      <div class="space-y-6">
        <h3 class="text-xl font-semibold text-gray-800 dark:text-white">Servicios</h3>
        <div class="space-y-4">
          {services.map((service) => (
            <div class="service-card p-4 rounded-xl">
              <div class="flex items-center gap-3">
                <div class={`w-8 h-8 ${service.color} rounded-lg flex items-center justify-center`}>
                  <!-- Iconos -->
                  <!-- Coloca aqu√≠ los iconos que ya ten√≠as en tu c√≥digo -->
                </div>
                <span class="font-medium text-gray-800 dark:text-white">{service.name}</span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>

    <!-- L√≠nea final -->
    <div class="border-t border-gray-200 dark:border-gray-700 pt-8">
      <div class="flex flex-col md:flex-row justify-between items-center gap-4">
        <div class="text-gray-600 dark:text-gray-400 text-sm">
          ¬© {currentYear} {name}. Hecho con ‚ù§Ô∏è y mucho caf√©.
        </div>
        <div class="flex items-center gap-6 text-sm text-gray-600 dark:text-gray-400">
          <a href="#privacy" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">Privacidad</a>
          <a href="#terms" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">T√©rminos</a>
          <div class="flex items-center gap-2">
            <span>üöÄ</span>
            <span>Disponible para proyectos</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .gradient-border {
    background: linear-gradient(45deg, #3b82f6, #8b5cf6, #06b6d4);
    padding: 2px;
    border-radius: 12px;
  }

  .gradient-border-inner {
    background: white;
    border-radius: 10px;
    padding: 1rem;
  }

  :global(.dark) .gradient-border-inner {
    background: #0f172a;
  }

  .floating-animation {
    animation: float 3s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-5px); }
  }

  .text-gradient {
    background: linear-gradient(135deg, #3b82f6, #8b5cf6);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .glow-effect {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
    transition: all 0.3s ease;
  }

  .glow-effect:hover {
    box-shadow: 0 0 30px rgba(59, 130, 246, 0.5);
    transform: translateY(-2px);
  }

  .service-card {
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }

  .service-card:hover {
    transform: translateY(-3px);
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(139, 92, 246, 0.2));
  }

  .pattern-dots {
    background-image: radial-gradient(circle, rgba(59, 130, 246, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
  }

  .border-gradient-subtle {
    border-image: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.3), rgba(139, 92, 246, 0.3), rgba(6, 182, 212, 0.3), transparent) 1;
  }

  @keyframes gradientMove {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  .animate-gradientMove {
    background-size: 200% 200%;
    animation: gradientMove 5s ease infinite;
  }

  .social-icon {
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .social-icon::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: left 0.5s;
  }

  .social-icon:hover::before {
    left: 100%;
  }
</style>

<script>
  const handleScroll = () => {
    const scrolled = window.pageYOffset;
    const parallax = document.querySelector('.pattern-dots');
    if (parallax) {
      parallax.style.transform = `translateY(${scrolled * 0.1}px)`;
    }
  };

  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.style.opacity = '1';
        entry.target.style.transform = 'translateY(0)';
      }
    });
  }, observerOptions);

  document.addEventListener('DOMContentLoaded', () => {
    window.addEventListener('scroll', handleScroll);
    document.querySelectorAll('.service-card').forEach((card, index) => {
      card.style.opacity = '0';
      card.style.transform = 'translateY(20px)';
      card.style.transition = `opacity 0.6s ease ${index * 0.1}s, transform 0.6s ease ${index * 0.1}s`;
      observer.observe(card);
    });
  });
</script>
